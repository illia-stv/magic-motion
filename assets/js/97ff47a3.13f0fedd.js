"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[304],{6015:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>r,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var i=e(4848),o=e(8453);const a={sidebar_position:6},s="Callbacks",c={id:"Tutorial Basics/callbacks",title:"Callbacks",description:"In MagicMotion, callbacks are very important as they notify us when an animation has started and finished. This is crucial because we highly recommend not updating the state of the animateTo property until the animation has finished.",source:"@site/docs/Tutorial Basics/callbacks.md",sourceDirName:"Tutorial Basics",slug:"/Tutorial Basics/callbacks",permalink:"/magic-motion/docs/Tutorial Basics/callbacks",draft:!1,unlisted:!1,editUrl:"https://github.com/illia-stv/magic-motion/tree/main/docs/docs/Tutorial Basics/callbacks.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Code Hilghliting",permalink:"/magic-motion/docs/Tutorial Basics/code-hilghliting"},next:{title:"Custom Themes",permalink:"/magic-motion/docs/Tutorial Extras/custom-themes"}},r={},l=[{value:"<code>onAnimationStart</code>",id:"onanimationstart",level:2},{value:"<code>onAnimationFinished</code>",id:"onanimationfinished",level:2}];function d(n){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"callbacks",children:"Callbacks"})}),"\n",(0,i.jsxs)(t.p,{children:["In ",(0,i.jsx)(t.strong,{children:"MagicMotion"}),", callbacks are very important as they notify us when an animation has started and finished. This is crucial because we highly recommend not updating the state of the ",(0,i.jsx)(t.code,{children:"animateTo"})," property until the animation has finished."]}),"\n",(0,i.jsx)(t.h2,{id:"onanimationstart",children:(0,i.jsx)(t.code,{children:"onAnimationStart"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-jsx",children:"import { MagicMotion } from 'magic-motion';\n\nconst App = () => {\n    const [animateTo, setAnimateTo] = useState();\n\n    const buttonHandler = () => {\n        setAnimateTo('Hello my friends');\n    };\n\n    return (\n        <>\n            <MagicMotion\n                initialContent=\"Hello world!!!\"\n                animateTo={animateTo}\n                onAnimationStart={() => console.log('Animation started!')}\n            />\n            <button onClick={buttonHandler}>Animate</button>\n        </>\n    );\n};\n\nexport default App;\n"})}),"\n",(0,i.jsx)(t.h2,{id:"onanimationfinished",children:(0,i.jsx)(t.code,{children:"onAnimationFinished"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-jsx",children:"import { MagicMotion } from 'magic-motion';\n\nconst App = () => {\n    const [animateTo, setAnimateTo] = useState();\n\n    const buttonHandler = () => {\n        setAnimateTo('Hello my friends');\n    };\n\n    return (\n        <>\n            <MagicMotion\n                initialContent=\"Hello world!!!\"\n                animateTo={animateTo}\n                onAnimationFinished={() => console.log('Animation finished!')}\n            />\n            <button onClick={buttonHandler}>Animate</button>\n        </>\n    );\n};\n"})})]})}function m(n={}){const{wrapper:t}={...(0,o.R)(),...n.components};return t?(0,i.jsx)(t,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},8453:(n,t,e)=>{e.d(t,{R:()=>s,x:()=>c});var i=e(6540);const o={},a=i.createContext(o);function s(n){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function c(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),i.createElement(a.Provider,{value:t},n.children)}}}]);